const int len=625;
float ppg[len]={};

float add[len];
float sub[len];
float multiply[len];
float divide[len];
float diff[len];

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  }

void loop() {
  // put your main code here, to run repeatedly:
  for(int i=0;i<len;i++){
    add[i]=ppg[i]+10;
    sub[i]=ppg[i]-5;
    multiply[i]=20*ppg[i];
    divide[i]=ppg[i]/0.2;
    }
    
    for(int i=1;i<len;i++){
      diff[i]=ppg[i]-ppg[i-1];
      }

    diff[0]=0;
    
    for(int i=0;i<len;i++){
      Serial.print(10*add[i]+10);
      Serial.print(',');
      Serial.print(30*diff[i]);
      Serial.print(',');
      Serial.println(10*ppg[i]+30);
      }

}
